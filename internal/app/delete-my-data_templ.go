// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.747
package app

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"database/sql"
	"log"
	"net/http"

	"purple-check/internal/config"
	"purple-check/internal/helpers"
)

func DeleteMyData() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"flex w-full justify-center\"><section class=\"px-4 py-8 prose\"><h1>Delete my data</h1><div id=\"content\"><p>Are you sure you want to delete your data?</p><p>This will delete all feedback you have given.</p><button hx-delete=\"/profile\" hx-target=\"#content\" class=\"font-semibold bg-red-50 border border-red-600 text-red-800 rounded-md px-4 py-1\">Delete my data</button></div></section></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

func DeleteAllUserFeedback(w http.ResponseWriter, r *http.Request) {
	db, err := sql.Open("libsql", config.DB_PATH)

	if err != nil {
		log.Println(err)
	}

	defer db.Close()

	curr_user := helpers.GetCurrUser(r, db)
	if curr_user == nil {
		http.Error(w, "User not found", http.StatusUnauthorized)
		return
	}

	stmt, err := db.Prepare("DELETE FROM feedback WHERE giver_id = ?")
	if err != nil {
		http.Error(w, "Error deleting data", http.StatusInternalServerError)
		log.Println(err)
		return
	}

	_, err = stmt.Exec(curr_user.ID)
	if err != nil {
		http.Error(w, "Error deleting data", http.StatusInternalServerError)
		log.Println(err)
		return
	}

	w.WriteHeader(http.StatusOK)
	w.Write([]byte("Data deleted"))
}
