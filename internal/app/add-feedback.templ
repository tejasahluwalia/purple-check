package app

import (
    "purple-check/internal/helpers"
	"purple-check/internal/components"
)

templ AddFeedback() {
    {{ 
        profile := helpers.GetProfile(components.GetRequestContext(ctx))
        currUser := helpers.GetCurrUser(components.GetRequestContext(ctx))     
     }}
    <section class="p-4">
        <div class="flex mt-4 mb-8">
            <h1 class="text-xl font-bold">Leave feedback for @{ profile.Username }</h1>
        </div>
        <form hx-put="/feedback">
            <input type="hidden" name="receiver_id" value={ profile.ID }>
            <input type="hidden" name="sender_id" value={ currUser.ID }>
            <input type="hidden" name="sender_username" value={ currUser.Username }>
            <input type="hidden" name="receiver_username" value={ profile.Username }>
            <label for="rating" class="font-semibold text-sm">Rating</label>
            <div class="flex space-x-2 mb-6 mt-2">
                <input class="star-rating hidden" type="radio" id="star1" name="rating" value="1" />
                <label for="star1" title="1 star">
                    <span class="sr-only">1 star</span>
                    <svg xmlns="http://www.w3.org/2000/svg" class="star transition-colors text-slate-300 h-12 w-12 flex-shrink-0" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                        <path fill-rule="evenodd" d="M10.868 2.884c-.321-.772-1.415-.772-1.736 0l-1.83 4.401-4.753.381c-.833.067-1.171 1.107-.536 1.651l3.62 3.102-1.106 4.637c-.194.813.691 1.456 1.405 1.02L10 15.591l4.069 2.485c.713.436 1.598-.207 1.404-1.02l-1.106-4.637 3.62-3.102c.635-.544.297-1.584-.536-1.65l-4.752-.382-1.831-4.401z" clip-rule="evenodd" />
                    </svg>  
                </label>
                <input class="star-rating hidden" type="radio" id="star2" name="rating" value="2" />
                <label for="star2" title="2 stars">
                    <span class="sr-only">2 stars</span>
                    <svg xmlns="http://www.w3.org/2000/svg" class="star transition-colors text-slate-300 h-12 w-12 flex-shrink-0" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                        <path fill-rule="evenodd" d="M10.868 2.884c-.321-.772-1.415-.772-1.736 0l-1.83 4.401-4.753.381c-.833.067-1.171 1.107-.536 1.651l3.62 3.102-1.106 4.637c-.194.813.691 1.456 1.405 1.02L10 15.591l4.069 2.485c.713.436 1.598-.207 1.404-1.02l-1.106-4.637 3.62-3.102c.635-.544.297-1.584-.536-1.65l-4.752-.382-1.831-4.401z" clip-rule="evenodd" />
                    </svg>  
                </label>            
                <input class="star-rating hidden" type="radio" id="star3" name="rating" value="3" />
                <label for="star3" title="3 stars">
                    <span class="sr-only">3 stars</span>
                    <svg xmlns="http://www.w3.org/2000/svg" class="star transition-colors text-slate-300 h-12 w-12 flex-shrink-0" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                        <path fill-rule="evenodd" d="M10.868 2.884c-.321-.772-1.415-.772-1.736 0l-1.83 4.401-4.753.381c-.833.067-1.171 1.107-.536 1.651l3.62 3.102-1.106 4.637c-.194.813.691 1.456 1.405 1.02L10 15.591l4.069 2.485c.713.436 1.598-.207 1.404-1.02l-1.106-4.637 3.62-3.102c.635-.544.297-1.584-.536-1.65l-4.752-.382-1.831-4.401z" clip-rule="evenodd" />
                    </svg>  
                </label>             
                <input class="star-rating hidden" type="radio" id="star4" name="rating" value="4" />
                <label for="star4" title="4 stars">
                    <span class="sr-only">4 stars</span>
                    <svg xmlns="http://www.w3.org/2000/svg" class="star transition-colors text-slate-300 h-12 w-12 flex-shrink-0" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                        <path fill-rule="evenodd" d="M10.868 2.884c-.321-.772-1.415-.772-1.736 0l-1.83 4.401-4.753.381c-.833.067-1.171 1.107-.536 1.651l3.62 3.102-1.106 4.637c-.194.813.691 1.456 1.405 1.02L10 15.591l4.069 2.485c.713.436 1.598-.207 1.404-1.02l-1.106-4.637 3.62-3.102c.635-.544.297-1.584-.536-1.65l-4.752-.382-1.831-4.401z" clip-rule="evenodd" />
                    </svg>  
                </label>
                <input class="star-rating hidden" type="radio" id="star5" name="rating" value="5" />
                <label for="star5" title="5 stars">
                    <span class="sr-only">5 stars</span>
                    <svg xmlns="http://www.w3.org/2000/svg" class="star transition-colors text-slate-300 h-12 w-12 flex-shrink-0" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                        <path fill-rule="evenodd" d="M10.868 2.884c-.321-.772-1.415-.772-1.736 0l-1.83 4.401-4.753.381c-.833.067-1.171 1.107-.536 1.651l3.62 3.102-1.106 4.637c-.194.813.691 1.456 1.405 1.02L10 15.591l4.069 2.485c.713.436 1.598-.207 1.404-1.02l-1.106-4.637 3.62-3.102c.635-.544.297-1.584-.536-1.65l-4.752-.382-1.831-4.401z" clip-rule="evenodd" />
                    </svg>  
                </label>
            </div>
            <div>
                <label for="comment" class="block text-sm font-semibold leading-6 text-gray-900">Add your comment</label>
                <div class="mt-2">
                    <textarea required rows="4" name="comment" id="comment" class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-purple-600 sm:text-sm sm:leading-6"></textarea>
                </div>
            </div>
            <button class="mt-3 w-full justify-center ml-auto flex items-center rounded-md bg-purple-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-purple-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-purple-600 active:bg-purple-500" type="submit">Submit</button>
        </form>
        <script>
            const stars = document.querySelectorAll('.star');

            const starRatingInputs = document.querySelectorAll('.star-rating');
            starRatingInputs.forEach((input) => {
                input.addEventListener('click', (e) => {
                    let rating = parseInt(e.target.value);
                    stars.forEach((star) => {
                        let starNumber = parseInt(star.parentNode.htmlFor.split('star')[1]);
                        if (starNumber <= rating) {
                            star.classList.remove('text-slate-300');
                            star.classList.add('text-purple-500');
                        } else {
                            star.classList.remove('text-purple-500');
                            star.classList.add('text-slate-300');
                        }
                    });
                });
            });

        </script>
    </section>
}