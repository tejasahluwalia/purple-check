package components

templ Search() {
	<form action="/search" method="post" class="block" id="search-form">
		<label for="search-term" class="block text-sm/6 font-medium text-gray-900">Search for a user to see reviews.</label>
		<div class="flex flex-col w-full space-y-4 mt-1 relative">
			<div class="relative">
				<input
					placeholder="@username"
					autocapitalize="none"
					class="block w-full rounded-md bg-white px-3 py-1.5 text-base text-gray-900 outline outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline focus:outline-2 focus:-outline-offset-2 focus:outline-purple-600 sm:text-sm/6"
					type="text"
					name="search-term"
					id="search-term"
					required
				/>
				<p id="error-message" class="hidden text-red-500 text-sm mt-1"></p>
			</div>
			<input
				class="rounded-md bg-purple-600 px-2.5 py-1.5 text-sm font-semibold text-white shadow-sm hover:not-disabled:bg-purple-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-purple-600 transition-colors"
				type="submit"
				id="search-button"
				value="Search"
				aria-label="Search for an Instagram user."
				disabled
			/>
		</div>
	</form>
	<script>
        const form = document.getElementById('search-form');
        const input = document.getElementById('search-term');
        const button = document.getElementById('search-button');
        const errorMessage = document.getElementById('error-message');

        function validateInstagramUsername(username) {
            // Remove @ if present
            username = username.replace('@', '');

            // Instagram username rules:
            // 1. 1-30 characters
            // 2. Can contain letters, numbers, periods, and underscores
            // 3. Can't start or end with a period
            // 4. Can't have consecutive periods
            const allowedCharacters = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789._";
            const hasConsecutivePeriods = /\.{2,}/.test(username);

            return username.length >= 1 &&
                   username.length <= 30 &&
                   !hasConsecutivePeriods &&
                   [...username].every(char => allowedCharacters.includes(char));
        }

        input.addEventListener('input', function(e) {
            const username = input.value.trim();

            if (!validateInstagramUsername(username)) {
                errorMessage.textContent = 'Please enter a valid Instagram username (1-30 characters, letters, numbers, periods, or underscores only).';
                errorMessage.classList.remove('hidden');
                input.classList.remove('ring-slate-300');
                input.classList.add('ring-red-500');
                button.disabled = true;
            } else {
                errorMessage.classList.add('hidden');
                input.classList.remove('ring-red-500');
                input.classList.add('ring-slate-300');
                button.disabled = false;
            }
        });

        button.addEventListener('click', function(e) {
						form.submit();
				});
    </script>
}
